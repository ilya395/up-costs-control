@import "../../scss/variables/variables";

$container_padding: 3.2rem; // $content_container_padding;
$item_padding: 1.5rem;

.expense-items-list {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  overflow: hidden;

  @media screen and (max-width: 369px) {
    margin-left: -$item_padding;
    margin-right: -$item_padding;
  }
  @media screen and (min-width: 370px) {
    margin-left: -1.1rem;
    margin-right: -1.1rem;
  }
  @media screen and (min-width: 450px) {
    margin-left: -$item_padding;
    margin-right: -$item_padding;
  }

  &__element {
    opacity: 0;
    animation: show-element .4s forwards;
    position: relative;
    overflow: hidden;

    @media screen and (max-width: 369px) {
      flex-basis: calc(50% - 1.5rem*2);
      flex-grow: 0;
      flex-shrink: 1;
      height: calc((100vw - 1.5rem*2*2 - #{$container_padding} * 2)/2);
      margin: $item_padding;
    }
    @media screen and (min-width: 370px) {
      $little_padding: 1.1rem;
      flex-basis: calc(33.33333% - 1.5rem*2);
      flex-grow: 0;
      flex-shrink: 1;
      height: calc((100vw - 1.5rem*2*3 - #{$container_padding} * 2)/3);
      margin: $little_padding;
    }
    @media screen and (min-width: 450px) {
      flex-basis: calc(33.33333% - 1.5rem*2);
      height: calc((450px - 1.5rem*2*3 - #{$container_padding} * 2)/3);
      margin: $item_padding;
    }
    @media screen and (min-width: 576px) {
      flex-basis: calc(33.33333% - 1.5rem*2);
      height: calc((576px - 1.5rem*2*3 - #{$container_padding} * 2)/3);
    }
    @media screen and (min-width: 768px) {
      flex-basis: calc(25% - 1.5rem*2);
      height: calc((768px - 1.5rem*2*4 - #{$container_padding} * 2)/4);
    }
    @media screen and (min-width: 992px) {
      flex-basis: calc(20% - 1.5rem*2);
      width: calc(20% - 1.5rem*2);
      height: calc((992px - 1.5rem*2*5 - #{$container_padding} * 2)/5);
    }
    @media screen and (min-width: 1200px) {
      flex-basis: calc(20% - 1.5rem*2);
      width: calc(20% - 1.5rem*2);
      height: calc((1200px - 1.5rem*2*5 - #{$container_padding} * 2)/5);
    }

    transition: all 150ms ease-in-out;

    &.can-drop {
      box-shadow: 0 0 10px 0 $link_color inset, 0 0 10px 4px $link_color;
    }
  }
}

@keyframes show-element {
  0% {
    opacity: 0;
    transform: translateX(20vw);
  }
  100% {
    opacity: 1;
    transform: translateX(0vw);
  }
}